# Workflow Name
name: CI/CD Pipeline

# When to Run the Workflow
on:
  push:
    branches: [main]     # Triggers on push to main branch
  pull_request:          # Also runs on any PR to any branch

# Job 1: Linting and Testing
jobs:
  lint-test:
    runs-on: ubuntu-latest   # GitHub-hosted runner

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4   # Pulls down your code

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'   # Same version as in Dockerfile

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Lint code with flake8
        run: flake8 .

      - name: Run unit tests with coverage
        run: pytest --cov=app.py --cov-report=term

# Job 2: Build and Push Docker Image
  docker:
    runs-on: ubuntu-latest
    needs: lint-test       # Only runs if lint-test passed

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: melmenshawy24/quote-calculator:latest

# Job 3: Deploy (Optional)
  deploy:
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Make deploy.sh executable
        run: chmod +x ./deploy.sh

      - name: Deploy app
        run: ./deploy.sh

# Job 4: Notification on Failure
  notify:
    runs-on: ubuntu-latest
    if: failure()   # Only runs if previous jobs fail

    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "GitHub Actions"
          SLACK_COLOR: "#FF0000"
          SLACK_MESSAGE: |
            CI/CD Failed for Quote Calculator!
            Commit: ${{ github.event.head_commit.message }}
            Link: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Send email (optional)
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "CI/CD Failed: Quote Calculator"
          to: your@email.com
          from: GitHub Actions
          body: "CI/CD failure details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
